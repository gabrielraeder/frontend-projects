document.querySelector('mutation-test-report-app').report = {"files":{"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/App.js":{"language":"javascript","mutants":[{"id":"1","location":{"end":{"column":54,"line":45},"start":{"column":47,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"0","location":{"end":{"column":48,"line":44},"start":{"column":42,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"2","location":{"end":{"column":70,"line":46},"start":{"column":51,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"}],"source":"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  readFavoritePokemonIds,\n  updateFavoritePokemons,\n} from './services/pokedexService';\n\nimport pokemons from './data';\nimport Routes from './routes';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isPokemonFavoriteById: this.setIsPokemonFavoriteById() };\n  }\n\n  onUpdateFavoritePokemons(pokemonId, isFavorite) {\n    updateFavoritePokemons(pokemonId, isFavorite);\n\n    this.setState(({ isPokemonFavoriteById: this.setIsPokemonFavoriteById() }));\n  }\n\n  setIsPokemonFavoriteById() {\n    const favoritePokemonIds = readFavoritePokemonIds();\n    const isPokemonFavorite = pokemons.reduce((acc, pokemon) => {\n      acc[pokemon.id] = favoritePokemonIds.includes(pokemon.id);\n      return acc;\n    }, {});\n\n    return isPokemonFavorite;\n  }\n\n  render() {\n    const { isPokemonFavoriteById } = this.state;\n    const favoritePokemons = pokemons.filter(({ id }) => isPokemonFavoriteById[id]);\n\n    return (\n      <div className=\"App\">\n        <h1>Pokédex</h1>\n        <nav>\n          <Link className=\"link\" to=\"/\">{`Home`}</Link>\n          <Link className=\"link\" to=\"/about\">{`About`}</Link>\n          <Link className=\"link\" to=\"/favorites\">{`Favorite Pokémons`}</Link>\n        </nav>\n        <Routes\n          favoritePokemons={ favoritePokemons }\n          pokemons={ pokemons }\n          isPokemonFavoriteById={ isPokemonFavoriteById }\n          onUpdateFavoritePokemons={\n            (pokemonId, checked) => this.onUpdateFavoritePokemons(pokemonId, checked)\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/components/FavoriteInput.js":{"language":"javascript","mutants":[{"id":"3","location":{"end":{"column":34,"line":10},"start":{"column":13,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass FavoriteInput extends Component {\n  render() {\n    const { onUpdateFavoritePokemons, isFavorite } = this.props;\n    return (\n      <form className=\"favorite-form\">\n        <label htmlFor=\"favorite\">\n          { `Pokémon favoritado?` }\n          <input\n            type=\"checkbox\"\n            id=\"favorite\"\n            checked={ isFavorite }\n            onChange={\n              ({ target: { checked } }) => onUpdateFavoritePokemons(checked)\n            }\n          />\n        </label>\n      </form>\n    );\n  }\n}\n\nFavoriteInput.propTypes = {\n  isFavorite: PropTypes.bool.isRequired,\n  onUpdateFavoritePokemons: PropTypes.func.isRequired,\n};\n\nexport default FavoriteInput;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/components/Pokemon.js":{"language":"javascript","mutants":[{"id":"5","location":{"end":{"column":58,"line":23},"start":{"column":42,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"4","location":{"end":{"column":51,"line":19},"start":{"column":42,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"6","location":{"end":{"column":30,"line":25},"start":{"column":20,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"7","location":{"end":{"column":55,"line":25},"start":{"column":39,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"8","location":{"end":{"column":35,"line":29},"start":{"column":19,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"9","location":{"end":{"column":50,"line":30},"start":{"column":19,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { pokemonType } from '../types';\n\nimport './pokemon.css';\n\nclass Pokemon extends React.Component {\n  render() {\n    const { pokemon, showDetailsLink, isFavorite } = this.props;\n    const { averageWeight, id, image, name, type } = pokemon;\n    const { measurementUnit, value } = averageWeight;\n\n    return (\n      <div className=\"pokemon\">\n        <div className=\"pokemon-overview\">\n          <p data-testid=\"pokemon-name\">{name}</p>\n          <p data-testid=\"pokemon-type\">{`${type}`}</p>\n          <p data-testid=\"pokemon-weight\">\n            Average weight: {value} {measurementUnit}\n          </p>\n          {showDetailsLink && <Link to={ `pokemons/${id}` }>More details</Link>}\n        </div>\n        <img src={ `${image}` } alt={ `${name} sprite` } />\n        {isFavorite && (\n          <img\n            className=\"favorite-icon\"\n            src={ `/star-icon.svg` }\n            alt={ `${name} is marked as favorite` }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nPokemon.propTypes = {\n  isFavorite: PropTypes.bool.isRequired,\n  pokemon: pokemonType.isRequired,\n  showDetailsLink: PropTypes.bool,\n};\n\nPokemon.defaultProps = {\n  showDetailsLink: true,\n};\n\nexport default Pokemon;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/components/PokemonButtonsPanel.js":{"language":"javascript","mutants":[{"id":"10","location":{"end":{"column":47,"line":12},"start":{"column":42,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"11","location":{"end":{"column":46,"line":19},"start":{"column":25,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"12","location":{"end":{"column":23,"line":24},"start":{"column":14,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport Button from './Button';\n\nclass PokemonButtonsPanel extends Component {\n  render() {\n    const { pokemonTypes, filterPokemons } = this.props;\n    return (\n      <div className=\"pokedex-buttons-panel\">\n        <Button\n          onClick={ () => filterPokemons('all') }\n          className=\"filter-button\"\n        >\n          All\n        </Button>\n        {pokemonTypes.map((type) => (\n          <Button\n            dataTestId={`pokemon-type-button`}\n            key={ type }\n            onClick={ () => filterPokemons(type) }\n            className=\"filter-button\"\n          >\n            {`${type}`}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n}\n\nPokemonButtonsPanel.propTypes = {\n  pokemonTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  filterPokemons: PropTypes.func.isRequired,\n};\n\nexport default PokemonButtonsPanel;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/components/PokemonData.js":{"language":"javascript","mutants":[{"id":"14","location":{"end":{"column":28,"line":13},"start":{"column":16,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"13","location":{"end":{"column":26,"line":12},"start":{"column":17,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"16","location":{"end":{"column":36,"line":20},"start":{"column":28,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"15","location":{"end":{"column":44,"line":16},"start":{"column":17,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"17","location":{"end":{"column":63,"line":20},"start":{"column":45,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React, { Component } from 'react';\nimport { pokemonType } from '../types';\n\nclass PokemonData extends Component {\n  render() {\n    const { pokemon } = this.props;\n    const { summary, foundAt, name } = pokemon;\n\n    return (\n      <>\n        <section>\n          <h2>{ `Summary` }</h2>\n          <p>{ `${summary}` }</p>\n        </section>\n        <section>\n          <h2>{ `Game Locations of ${name}` }</h2>\n          <div className=\"pokemon-habitat\">\n            { foundAt.map(({ location, map }) => (\n              <div key={ location }>\n                <img src={ `${map}` } alt={ `${name} location` } />\n                <p><em>{ location }</em></p>\n              </div>\n            )) }\n          </div>\n        </section>\n      </>\n    );\n  }\n}\n\nPokemonData.propTypes = {\n  pokemon: pokemonType.isRequired,\n};\n\nexport default PokemonData;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/pages/FavoritePokemons.js":{"language":"javascript","mutants":[{"id":"20","location":{"end":{"column":45,"line":21},"start":{"column":18,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { pokemonType } from '../types';\n\nimport './favorite-pokemons.css';\nimport { Pokemon } from '../components';\n\nconst ZERO = 0;\n\nclass FavoritePokemons extends React.Component {\n  render() {\n    const { pokemons } = this.props;\n    const isEmpty = pokemons.length === ZERO;\n\n    return (\n      <div>\n        <h2>Favorite pokémons</h2>\n        { isEmpty ? (\n          <div>\n            <p>{ `No favorite pokemon found` }</p>\n          </div>\n        ) : (\n          pokemons.map((pokemon) => (\n            <div key={ pokemon.id } className=\"favorite-pokemon\">\n              <Pokemon pokemon={ pokemon } isFavorite />\n            </div>\n          ))\n        ) }\n      </div>\n    );\n  }\n}\n\nFavoritePokemons.propTypes = {\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired),\n};\n\nFavoritePokemons.defaultProps = {\n  pokemons: [],\n};\n\nexport default FavoritePokemons;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/pages/About.js":{"language":"javascript","mutants":[{"id":"19","location":{"end":{"column":119,"line":19},"start":{"column":19,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"18","location":{"end":{"column":30,"line":8},"start":{"column":15,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React from 'react';\nimport './about.css';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <section>\n        <h2>{ `About Pokédex` }</h2>\n        <section>\n          <p>\n            This application simulates a Pokédex, a\n            digital encyclopedia containing all Pokémons\n          </p>\n          <p>\n            One can filter Pokémons by type, and see more details for each one of them\n          </p>\n          <img\n            className=\"pokedex-image\"\n            src={ `https://cdn2.bulbagarden.net/upload/thumb/8/86/Gen_I_Pok%C3%A9dex.png/800px-Gen_I_Pok%C3%A9dex.png` }\n            alt=\"Pokédex\"\n          />\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default About;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/pages/NotFound.js":{"language":"javascript","mutants":[{"id":"21","location":{"end":{"column":39,"line":9},"start":{"column":13,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"22","location":{"end":{"column":72,"line":14},"start":{"column":17,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React from 'react';\nimport './not-found.css';\n\nclass NotFound extends React.Component {\n  render() {\n    return (\n      <div className=\"not-found\">\n        <h2>\n          { `Page requested not found` }\n          <span role=\"img\" aria-label=\"Crying emoji\"> 😭</span>\n        </h2>\n        <img\n          className=\"not-found-image\"\n          src={ `https://media.giphy.com/media/kNSeTs31XBZ3G/giphy.gif` }\n          alt=\"Pikachu crying because the page requested was not found\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/pages/Pokedex.js":{"language":"javascript","mutants":[{"id":"23","location":{"end":{"column":56,"line":16},"start":{"column":51,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"24","location":{"end":{"column":33,"line":34},"start":{"column":28,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport {\n  Button,\n  Pokemon,\n  PokemonButtonsPanel,\n} from '../components';\n\nimport './pokedex.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pokemonIndex: 0, filteredType: 'all' };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({ filteredType, pokemonIndex: 0 });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState((state) => (\n      { pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons }\n    ));\n  }\n\n  fetchFilteredPokemons() {\n    const { pokemons } = this.props;\n    const { filteredType } = this.state;\n\n    return pokemons.filter((pokemon) => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const { pokemons } = this.props;\n\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n\n  render() {\n    const { isPokemonFavoriteById } = this.props;\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const { pokemonIndex } = this.state;\n    const pokemon = filteredPokemons[pokemonIndex];\n    const pokemonTypes = this.fetchPokemonTypes();\n\n    return (\n      <div className=\"pokedex\">\n        <h2>Encountered pokémons</h2>\n        <Pokemon\n          pokemon={ pokemon }\n          isFavorite={ isPokemonFavoriteById[pokemon.id] }\n        />\n        <PokemonButtonsPanel\n          pokemonTypes={ pokemonTypes }\n          filterPokemons={ (type) => this.filterPokemons(type) }\n        />\n        <Button\n          dataTestId=\"next-pokemon\"\n          className=\"pokedex-button\"\n          onClick={ () => this.nextPokemon(filteredPokemons.length) }\n          disabled={ filteredPokemons.length <= 1 }\n        >\n          Próximo pokémon\n        </Button>\n      </div>\n    );\n  }\n}\n\nPokedex.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default Pokedex;\n"},"/home/gabriel/projetos/sd-023-a-project-react-testing-library/src/pages/PokemonDetails.js":{"language":"javascript","mutants":[{"id":"25","location":{"end":{"column":40,"line":30},"start":{"column":15,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Pokemon from '../components/Pokemon';\nimport PokemonData from '../components/PokemonData';\nimport FavoriteInput from '../components/FavoriteInput';\n\nimport './pokemon-details.css';\n\nclass PokemonDetails extends React.Component {\n  findPokemon(givenId) {\n    const { pokemons } = this.props;\n\n    return pokemons.find(({ id }) => id === givenId);\n  }\n\n  render() {\n    const {\n      match: { params: { id } },\n      isPokemonFavoriteById,\n      onUpdateFavoritePokemons,\n    } = this.props;\n\n    const pokemon = this.findPokemon(parseInt(id, 10));\n    const isFavorite = isPokemonFavoriteById[id];\n\n    return (\n      <section className=\"pokemon-details\">\n        <h2>{ `${pokemon.name} Details` }</h2>\n        <Pokemon\n          pokemon={ pokemon }\n          showDetailsLink={ false }\n          isFavorite={ isFavorite }\n        />\n        <PokemonData pokemon={ pokemon } />\n        <FavoriteInput\n          isFavorite={ isFavorite }\n          onUpdateFavoritePokemons={\n            (checked) => onUpdateFavoritePokemons(pokemon.id, checked)\n          }\n        />\n      </section>\n    );\n  }\n}\n\nPokemonDetails.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  onUpdateFavoritePokemons: PropTypes.func.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default PokemonDetails;\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};